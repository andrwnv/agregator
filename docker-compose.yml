version: '3'

services:
  user_service:
    build: ./user-service
    container_name: user_service
    volumes:
      - "./user-service:/src/app"
    hostname: user_service
    networks:
      - backend
    expose:
      - "3010"
    ports:
      - "3010:3010"
    depends_on:
      - user_service_db
      - rabbitmq_service
    working_dir: "/src/app"
    command: npm run start:dev

  mailer_service:
    build: ./mailer-service
    container_name: mailer_service
    volumes:
      - "./mailer_service:/src/app"
    hostname: mailer_service
    networks:
      - backend
    depends_on:
      - rabbitmq_service
    working_dir: "/src/app"
    command: npm run start:dev

  #  events_service:
  #    build: ./events-service
  #    container_name: events_service
  #    volumes:
  #      - "./events-service:/src/app"
  #    hostname: events_service
  #    networks:
  #      - backend
  #    expose:
  #      - "3020"
  #    ports:
  #      - "3020:3020"
  #    working_dir: "/src/app"
  #    command: npm run start:dev

  user_service_db:
    image: postgres
    volumes:
      - ./user-service/container/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5000:5432"
    networks:
      - backend

  rabbitmq_service:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - 'rabbitmq_data:/data'

  nginx_api_gateway:
    container_name: nginx_api_gateway
    depends_on:
      - user_service
    build: ./nginx
    networks:
      - backend
    volumes:
      - "app_www:/usr/share/nginx/www"
    ports:
      - "3000:80"
    expose:
      - "80"

networks:
  backend:
    driver: bridge

volumes:
  app_www:
    external: true
  rabbitmq_data:
